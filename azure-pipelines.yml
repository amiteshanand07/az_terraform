trigger:
  branches:
    include:
    - main
pool: amiteshpool
stages:
- stage: TerraformInstall
  jobs:
  - job: TerraformInstallJob
    steps:
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'
- stage: TFSec
  jobs:
  - job: TFSecJob
    steps:
    - task: tfsec@1
      inputs:
        version: 'v1.26.0'
- stage: TerraformInit
  jobs:
  - job: TerraformInitandPlanJob
    steps:
    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/infra'
        backendServiceArm: 'amiteshserviceconnection'
        backendAzureRmStorageAccountName: 'pkdgstorage'
        backendAzureRmContainerName: 'pkdgcontainer'
        backendAzureRmKey: 'amitesh.terraform.tfstate'

  
    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/infra'
        environmentServiceNameAzureRM: 'amiteshserviceconnection'
- stage: TerraformApply
  jobs:
  - job: TerraformInitandApply
    steps:
    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/infra'
        backendServiceArm: 'amiteshserviceconnection'
        backendAzureRmStorageAccountName: 'pkdgstorage'
        backendAzureRmContainerName: 'pkdgcontainer'
        backendAzureRmKey: 'amitesh.terraform.tfstate'
    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(System.DefaultWorkingDirectory)/infra'
        environmentServiceNameAzureRM: 'amiteshserviceconnection'
       
